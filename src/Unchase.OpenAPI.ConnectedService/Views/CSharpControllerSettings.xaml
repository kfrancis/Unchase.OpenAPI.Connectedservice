<UserControl
    x:Class="Unchase.OpenAPI.ConnectedService.Views.CSharpControllerSettings"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:commands="clr-namespace:Unchase.OpenAPI.ConnectedService.Common.Commands"
    xmlns:converters="clr-namespace:Unchase.OpenAPI.ConnectedService.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:viewModels="clr-namespace:Unchase.OpenAPI.ConnectedService.ViewModels"
    d:DesignHeight="420"
    d:DesignWidth="768"
    mc:Ignorable="d">
    <UserControl.Resources>
        <viewModels:CSharpControllerSettingsViewModel x:Key="ViewModel" />
        <converters:VisibilityConverter x:Key="VisibilityConverter" />
        <converters:StringArrayConverter x:Key="StringArrayConverter" />
        <converters:VisibilityToHyperlinkTextConverter x:Key="VisibilityToHyperlinkTextConverter" />
        <commands:StackPanelChangeVisibilityCommand x:Key="StackPanelChangeVisibilityCommand" />
    </UserControl.Resources>
    <StackPanel>
        <TextBlock
            Margin="0,20,0,0"
            HorizontalAlignment="Stretch"
            TextWrapping="Wrap">
            You can use default settings to generate client code file or click on hyperlinks to choose custom settings :
        </TextBlock>

        <TextBlock
            Margin="0,20,0,0"
            HorizontalAlignment="Stretch"
            TextWrapping="Wrap">
            <Bold>Main Settings</Bold>
            (<Hyperlink
                Name="MainSettingsHyperlink"
                Command="{StaticResource StackPanelChangeVisibilityCommand}"
                CommandParameter="{Binding ElementName=MainSettingsPanel}">
                <TextBlock
                    Name="MainSettingsHyperlinkText"
                    Text="{Binding ElementName=MainSettingsPanel, Path=Visibility, Converter={StaticResource VisibilityToHyperlinkTextConverter}}"
                    TextWrapping="WrapWithOverflow" />
            </Hyperlink>
            )</TextBlock>
        <StackPanel
            x:Name="MainSettingsPanel"
            Margin="20,5,0,0"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Top"
            Visibility="Collapsed">
            <TextBlock
                Margin="0,5,0,0"
                FontWeight="Bold"
                Text="Namespace (empty for auto-generated namespace) :"
                TextWrapping="WrapWithOverflow" />
            <TextBox
                x:Name="Namespace"
                Margin="0,5,10,5"
                Text="{Binding Command.Namespace, Mode=TwoWay}" />

            <TextBlock
                Margin="0,5,0,0"
                FontWeight="Bold"
                Text="Additional Namespace Usages (comma separated) :"
                TextWrapping="WrapWithOverflow" />
            <TextBox
                x:Name="AdditionalNamespaceUsages"
                Margin="0,5,10,5"
                Text="{Binding Command.AdditionalNamespaceUsages, Mode=TwoWay, Converter={StaticResource StringArrayConverter}, ConverterParameter=','}" />
        </StackPanel>

        <TextBlock Margin="0,10,0,0" TextWrapping="Wrap">
            <Bold>Controller</Bold>
            (<Hyperlink
                Name="ControllerSettingsHyperlink"
                Command="{StaticResource StackPanelChangeVisibilityCommand}"
                CommandParameter="{Binding ElementName=ControllerSettingsPanel}">
                <TextBlock
                    Name="ControllerSettingsHyperlinkText"
                    Text="{Binding ElementName=ControllerSettingsPanel, Path=Visibility, Converter={StaticResource VisibilityToHyperlinkTextConverter}}"
                    TextWrapping="WrapWithOverflow" />
            </Hyperlink>
            )</TextBlock>
        <StackPanel
            x:Name="ControllerSettingsPanel"
            Margin="20,0,0,0"
            Visibility="Collapsed">
            <TextBlock
                Margin="0,5,0,0"
                FontWeight="Bold"
                Text="Controller Style :"
                TextWrapping="WrapWithOverflow" />
            <ComboBox
                Margin="0,5,10,5"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Center"
                ItemsSource="{Binding ControllerStyles}"
                SelectedItem="{Binding Command.ControllerStyle, Mode=TwoWay}"
                ToolTip="ControllerStyle" />

            <TextBlock
                Margin="0,5,0,0"
                FontWeight="Bold"
                Text="Controller Target :"
                TextWrapping="WrapWithOverflow" />
            <ComboBox
                Margin="0,5,10,5"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Center"
                ItemsSource="{Binding ControllerTargets}"
                SelectedItem="{Binding Command.ControllerTarget, Mode=TwoWay}"
                ToolTip="ControllerTarget" />

            <CheckBox
                Margin="0,5,10,5"
                Content="Use ASP.Net Core (2.1) ActionResult type as return type."
                IsChecked="{Binding Command.UseActionResultType, Mode=TwoWay}" />

            <CheckBox
                Margin="0,5,10,5"
                Content="Add cancellation token to controller methods."
                IsChecked="{Binding Command.UseCancellationToken, Mode=TwoWay}" />

            <CheckBox
                Margin="0,5,10,5"
                Content="Add model validation attributes."
                IsChecked="{Binding Command.GenerateModelValidationAttributes, Mode=TwoWay}"
                ToolTip="GenerateModelValidationAttributes" />

            <CheckBox
                Margin="0,5,10,5"
                Content="Wrap success responses to allow full response access."
                IsChecked="{Binding Command.WrapResponses, Mode=TwoWay}" />

            <CheckBox Margin="0,5,10,5" IsChecked="{Binding Command.GenerateOptionalParameters, Mode=TwoWay}">
                <TextBlock Text="Generate optional parameters (reorder parameters (required first, optional at the end) and generate optional parameters)." TextWrapping="Wrap" />
            </CheckBox>

            <TextBlock
                Margin="0,5,10,5"
                FontWeight="Bold"
                Text="Excluded Parameter Names (comma separated) :"
                TextWrapping="WrapWithOverflow" />
            <TextBox
                Margin="0,5,10,5"
                Text="{Binding Command.ExcludedParameterNames, Mode=TwoWay, Converter={StaticResource StringArrayConverter}, ConverterParameter=','}"
                ToolTip="ExcludedParameterNames" />

            <TextBlock
                Margin="0,5,0,0"
                FontWeight="Bold"
                Text="Route Naming Strategy :"
                TextWrapping="WrapWithOverflow" />
            <ComboBox
                Margin="0,5,10,5"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Center"
                ItemsSource="{Binding RouteNamingStrategies}"
                SelectedItem="{Binding Command.RouteNamingStrategy, Mode=TwoWay}"
                ToolTip="RouteNamingStrategy" />
            <StackPanel Visibility="{Binding Command.WrapResponses, Converter={StaticResource VisibilityConverter}}">
                <TextBlock
                    Margin="0,5,0,0"
                    FontWeight="Bold"
                    Text="Methods where responses are wrapped (empty for all, 'ControllerName.MethodName', comma separated) :"
                    TextWrapping="WrapWithOverflow" />
                <TextBox
                    Margin="0,5,10,5"
                    Text="{Binding Command.WrapResponseMethods, Mode=TwoWay, Converter={StaticResource StringArrayConverter}, ConverterParameter=','}"
                    ToolTip="WrapResponseMethods" />

                <CheckBox
                    Margin="0,5,0,0"
                    Content="Generate response classes (when disabled, response classes must be imported)."
                    IsChecked="{Binding Command.GenerateResponseClasses, Mode=TwoWay}" />
                <StackPanel Visibility="{Binding Command.GenerateResponseClasses, Converter={StaticResource VisibilityConverter}}">
                    <TextBlock
                        Margin="0,5,0,0"
                        FontWeight="Bold"
                        Text="Response class name (may contain the '{controller}' placeholder) :"
                        TextWrapping="WrapWithOverflow" />
                    <TextBox Margin="0,5,10,5" Text="{Binding Command.ResponseClass, Mode=TwoWay}" />
                </StackPanel>
            </StackPanel>

            <TextBlock Margin="0,10,0,0" TextWrapping="Wrap">
                <Bold>Web API Controller</Bold>
                (<Hyperlink
                    Name="WebAPIControllerSettingsHyperlink"
                    Command="{StaticResource StackPanelChangeVisibilityCommand}"
                    CommandParameter="{Binding ElementName=WebAPIControllerSettingsPanel}">
                    <TextBlock
                        Name="WebAPIControllerSettingsHyperlinkText"
                        Text="{Binding ElementName=WebAPIControllerSettingsPanel, Path=Visibility, Converter={StaticResource VisibilityToHyperlinkTextConverter}}"
                        TextWrapping="WrapWithOverflow" />
                </Hyperlink>
                )</TextBlock>
            <StackPanel
                x:Name="WebAPIControllerSettingsPanel"
                Margin="20,0,0,0"
                Visibility="Collapsed">
                <TextBlock
                    Margin="0,5,0,0"
                    FontWeight="Bold"
                    Text="BasePath override (RoutePrefix) :"
                    TextWrapping="WrapWithOverflow" />
                <TextBox Margin="0,5,10,5" Text="{Binding Command.BasePath, Mode=TwoWay}" />

                <TextBlock
                    Margin="0,5,0,0"
                    FontWeight="Bold"
                    Text="Controller Class Name :"
                    TextWrapping="WrapWithOverflow" />
                <TextBox Margin="0,5,10,5" Text="{Binding Command.ClassName, Mode=TwoWay}" />

                <TextBlock
                    Margin="0,5,0,0"
                    FontWeight="Bold"
                    Text="Controller Base Class Name (optional, use 'Microsoft.AspNetCore.Mvc.Controller' for ASP.NET Core) :"
                    TextWrapping="WrapWithOverflow" />
                <TextBox Margin="0,5,10,5" Text="{Binding Command.ControllerBaseClass, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                <TextBlock Margin="0,5,0,0" TextWrapping="Wrap">
                    <Run FontWeight="Bold" Text="Operation Generation Mode :" />
                    <LineBreak />
                    The {controller} placeholder of the Class Name is replaced by generated client name (depends on the OperationGenerationMode strategy).</TextBlock>
                <ComboBox
                    Margin="0,5,10,5"
                    ItemsSource="{Binding OperationGenerationModes}"
                    SelectedItem="{Binding Command.OperationGenerationMode, Mode=TwoWay}" />
            </StackPanel>

            <TextBlock Margin="0,10,0,0" TextWrapping="Wrap">
                <Bold>Parameter Types</Bold>
                (<Hyperlink
                    Name="ParameterTypesSettingsHyperlink"
                    Command="{StaticResource StackPanelChangeVisibilityCommand}"
                    CommandParameter="{Binding ElementName=ParameterTypesSettingsPanel}">
                    <TextBlock
                        Name="ParameterTypesSettingsHyperlinkText"
                        Text="{Binding ElementName=ParameterTypesSettingsPanel, Path=Visibility, Converter={StaticResource VisibilityToHyperlinkTextConverter}}"
                        TextWrapping="WrapWithOverflow" />
                </Hyperlink>
                )</TextBlock>
            <StackPanel
                x:Name="ParameterTypesSettingsPanel"
                Margin="20,0,0,0"
                Visibility="Collapsed">
                <TextBlock
                    Margin="0,5,0,0"
                    FontWeight="Bold"
                    Text="Generic Array Type :"
                    TextWrapping="WrapWithOverflow" />
                <TextBox
                    Margin="0,5,10,5"
                    Text="{Binding Command.ParameterArrayType, Mode=TwoWay}"
                    ToolTip="ParameterArrayType" />

                <TextBlock
                    Margin="0,5,0,0"
                    FontWeight="Bold"
                    Text="Generic Dictionary Type :"
                    TextWrapping="WrapWithOverflow" />
                <TextBox
                    Margin="0,5,10,5"
                    Text="{Binding Command.ParameterDictionaryType, Mode=TwoWay}"
                    ToolTip="ParameterDictionaryType" />
            </StackPanel>

            <TextBlock Margin="0,10,0,0" TextWrapping="Wrap">
                <Bold>Response Types</Bold>
                (<Hyperlink
                    Name="ResponseTypesSettingsHyperlink"
                    Command="{StaticResource StackPanelChangeVisibilityCommand}"
                    CommandParameter="{Binding ElementName=ResponseTypesSettingsPanel}">
                    <TextBlock
                        Name="ResponseTypesSettingsHyperlinkText"
                        Text="{Binding ElementName=ResponseTypesSettingsPanel, Path=Visibility, Converter={StaticResource VisibilityToHyperlinkTextConverter}}"
                        TextWrapping="WrapWithOverflow" />
                </Hyperlink>
                )</TextBlock>
            <StackPanel
                x:Name="ResponseTypesSettingsPanel"
                Margin="20,0,0,0"
                Visibility="Collapsed">
                <TextBlock
                    Margin="0,5,0,0"
                    FontWeight="Bold"
                    Text="Generic Array Type :"
                    TextWrapping="WrapWithOverflow" />
                <TextBox
                    Margin="0,5,10,5"
                    Text="{Binding Command.ResponseArrayType, Mode=TwoWay}"
                    ToolTip="ResponseArrayType" />

                <TextBlock
                    Margin="0,5,0,0"
                    FontWeight="Bold"
                    Text="Generic Dictionary Type :"
                    TextWrapping="WrapWithOverflow" />
                <TextBox
                    Margin="0,5,10,5"
                    Text="{Binding Command.ResponseDictionaryType, Mode=TwoWay}"
                    ToolTip="ResponseDictionaryType" />
            </StackPanel>
        </StackPanel>

        <TextBlock Margin="0,10,0,0" TextWrapping="Wrap">
            <Bold>DTO classes</Bold>
            (<Hyperlink
                Name="DtoClassesSettingsHyperlink"
                Command="{StaticResource StackPanelChangeVisibilityCommand}"
                CommandParameter="{Binding ElementName=DtoClassesSettingsPanel}">
                <TextBlock
                    Name="DtoClassesSettingsHyperlinkText"
                    Text="{Binding ElementName=DtoClassesSettingsPanel, Path=Visibility, Converter={StaticResource VisibilityToHyperlinkTextConverter}}"
                    TextWrapping="WrapWithOverflow" />
            </Hyperlink>
            )</TextBlock>
        <StackPanel
            x:Name="DtoClassesSettingsPanel"
            Margin="20,0,0,0"
            Visibility="Collapsed">
            <CheckBox Margin="0,5,10,5" IsChecked="{Binding Command.GenerateDtoTypes, Mode=TwoWay}">
                <TextBlock
                    Text="Generate DTO Types (e.g. request and response classes)"
                    TextWrapping="Wrap"
                    ToolTip="GenerateDtoTypes" />
            </CheckBox>
            <StackPanel Margin="20,0,0,0" Visibility="{Binding Command.GenerateDtoTypes, Converter={StaticResource VisibilityConverter}}">
                <CheckBox
                    Margin="0,5,10,5"
                    IsChecked="{Binding Command.GenerateOptionalPropertiesAsNullable, Mode=TwoWay}"
                    ToolTip="GenerateOptionalPropertiesAsNullable">
                    <TextBlock Text="Generate optional schema properties (not required) as nullable properties." TextWrapping="Wrap" />
                </CheckBox>
                <CheckBox
                    Margin="0,5,10,5"
                    IsChecked="{Binding Command.GenerateNullableReferenceTypes, Mode=TwoWay}"
                    ToolTip="GenerateNullableReferenceTypes">
                    <TextBlock Text="Generate Nullable Reference Type (NRT) annotations (C# 8)." TextWrapping="Wrap" />
                </CheckBox>

                <TextBlock
                    Margin="0,5,0,0"
                    FontWeight="Bold"
                    Text="Excluded Type Names (comma separated, must be defined in another namespace) :"
                    TextWrapping="WrapWithOverflow" />
                <TextBox
                    Margin="0,5,10,5"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Center"
                    Text="{Binding Command.ExcludedTypeNames, Mode=TwoWay, Converter={StaticResource StringArrayConverter}, ConverterParameter=','}"
                    ToolTip="ExcludedTypeNames" />

                <TextBlock
                    Margin="0,5,0,0"
                    FontWeight="Bold"
                    Text="DTO class/enum access modifier :"
                    TextWrapping="WrapWithOverflow" />
                <TextBox
                    Margin="0,5,10,5"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Center"
                    Text="{Binding Command.TypeAccessModifier, Mode=TwoWay}"
                    ToolTip="TypeAccessModifier" />

                <CheckBox
                    Margin="0,5,10,5"
                    IsChecked="{Binding Command.GenerateDefaultValues, Mode=TwoWay}"
                    ToolTip="GenerateDefaultValues">
                    <TextBlock Text="Generate default values for properties (if default value is specified)." TextWrapping="Wrap" />
                </CheckBox>
                <CheckBox
                    Margin="0,5,10,5"
                    IsChecked="{Binding Command.GenerateImmutableArrayProperties, Mode=TwoWay}"
                    ToolTip="GenerateImmutableArrayProperties">
                    <TextBlock Text="Remove the setter for non-nullable array properties." TextWrapping="Wrap" />
                </CheckBox>

                <CheckBox
                    Margin="0,5,10,5"
                    IsChecked="{Binding Command.GenerateImmutableDictionaryProperties, Mode=TwoWay}"
                    ToolTip="GenerateImmutableDictionaryProperties">
                    <TextBlock Text="Remove the setter for non-nullable dictionary properties." TextWrapping="Wrap" />
                </CheckBox>

                <CheckBox
                    Margin="0,5,10,5"
                    IsChecked="{Binding Command.GenerateDataAnnotations, Mode=TwoWay}"
                    ToolTip="GenerateDataAnnotations">
                    <TextBlock Text="Generate data annotation attributes." TextWrapping="Wrap" />
                </CheckBox>

                <CheckBox
                    Margin="0,5,10,5"
                    IsChecked="{Binding Command.GenerateJsonMethods, Mode=TwoWay}"
                    ToolTip="GenerateJsonMethods">
                    <TextBlock Text="Generate ToJson() and FromJson() methods." TextWrapping="Wrap" />
                </CheckBox>

                <CheckBox
                    Margin="0,5,10,5"
                    IsChecked="{Binding Command.EnforceFlagEnums, Mode=TwoWay}"
                    ToolTip="EnforceFlagEnums">
                    <TextBlock Text="Always generate enums as bit flags (with [Flags] attribute)." TextWrapping="Wrap" />
                </CheckBox>

                <CheckBox
                    Margin="0,5,10,5"
                    IsChecked="{Binding Command.InlineNamedArrays, Mode=TwoWay}"
                    ToolTip="InlineNamedArrays">
                    <TextBlock Text="Inline named arrays." TextWrapping="Wrap" />
                </CheckBox>

                <CheckBox
                    Margin="0,5,10,5"
                    IsChecked="{Binding Command.InlineNamedDictionaries, Mode=TwoWay}"
                    ToolTip="InlineNamedDictionaries">
                    <TextBlock Text="Inline named dictionaries." TextWrapping="Wrap" />
                </CheckBox>

                <CheckBox
                    Margin="0,5,10,5"
                    IsChecked="{Binding Command.InlineNamedTuples, Mode=TwoWay}"
                    ToolTip="InlineNamedTuples">
                    <TextBlock Text="Inline named tuples." TextWrapping="Wrap" />
                </CheckBox>

                <CheckBox
                    Margin="0,5,10,5"
                    IsChecked="{Binding Command.InlineNamedAny, Mode=TwoWay}"
                    ToolTip="InlineNamedAny">
                    <TextBlock Text="Inline named any schemas." TextWrapping="Wrap" />
                </CheckBox>

                <TextBlock
                    Margin="0,5,10,5"
                    FontWeight="Bold"
                    Text="Class Style"
                    TextWrapping="WrapWithOverflow" />
                <ComboBox
                    Margin="0,5,10,5"
                    ItemsSource="{Binding ClassStyles}"
                    SelectedItem="{Binding Command.ClassStyle, Mode=TwoWay}"
                    ToolTip="ClassStyle" />

                <TextBlock Margin="0,5,10,5" TextWrapping="Wrap">
                    Serialization (<Hyperlink
                        Name="SerializationHyperlink"
                        Command="{StaticResource StackPanelChangeVisibilityCommand}"
                        CommandParameter="{Binding ElementName=SerializationPanel}">
                        <TextBlock
                            Name="SerializationHyperlinkText"
                            Text="{Binding ElementName=SerializationPanel, Path=Visibility, Converter={StaticResource VisibilityToHyperlinkTextConverter}}"
                            TextWrapping="WrapWithOverflow" />
                    </Hyperlink>
                    )</TextBlock>
                <StackPanel x:Name="SerializationPanel" Margin="20,0,0,0">
                    <CheckBox
                        Margin="0,5,10,5"
                        IsChecked="{Binding Command.RequiredPropertiesMustBeDefined, Mode=TwoWay}"
                        ToolTip="RequiredPropertiesMustBeDefined">
                        <TextBlock Text="Required properties must be defined in JSON (sets Required.Always when the property is required)." TextWrapping="Wrap" />
                    </CheckBox>

                    <CheckBox
                        Margin="0,5,10,5"
                        Content="Use preserve references handling (All) in the JSON serializer."
                        IsChecked="{Binding Command.HandleReferences, Mode=TwoWay}"
                        ToolTip="HandleReferences" />

                    <TextBlock
                        Margin="0,5,10,5"
                        FontWeight="Bold"
                        Text="Custom Json.NET converter types (optional, multiple on separate lines) :"
                        TextWrapping="WrapWithOverflow" />
                    <TextBox
                        Height="52"
                        Margin="0,5,10,5"
                        AcceptsReturn="True"
                        Text="{Binding Command.JsonConverters, Mode=TwoWay, Converter={StaticResource StringArrayConverter}}"
                        ToolTip="JsonConverters"
                        VerticalScrollBarVisibility="Visible" />

                    <TextBlock
                        Margin="0,5,10,5"
                        FontWeight="Bold"
                        Text="JsonSerializerSettings transformation method name (we recommend GenerateUpdateJsonSerializerSettingsMethod instead) :"
                        TextWrapping="WrapWithOverflow" />
                    <TextBox
                        Margin="0,5,10,5"
                        Text="{Binding Command.JsonSerializerSettingsTransformationMethod, Mode=TwoWay}"
                        ToolTip="JsonSerializerSettingsTransformationMethod" />
                </StackPanel>

                <TextBlock Margin="0,5,10,5" TextWrapping="Wrap">
                    Primitive Types (<Hyperlink
                        Name="PrimitiveTypesHyperlink"
                        Command="{StaticResource StackPanelChangeVisibilityCommand}"
                        CommandParameter="{Binding ElementName=PrimitiveTypesPanel}">
                        <TextBlock
                            Name="PrimitiveTypesHyperlinkText"
                            Text="{Binding ElementName=PrimitiveTypesPanel, Path=Visibility, Converter={StaticResource VisibilityToHyperlinkTextConverter}}"
                            TextWrapping="WrapWithOverflow" />
                    </Hyperlink>
                    )</TextBlock>
                <StackPanel x:Name="PrimitiveTypesPanel" Margin="20,0,0,0">
                    <TextBlock
                        Margin="0,5,10,5"
                        FontWeight="Bold"
                        Text="Any Type"
                        TextWrapping="WrapWithOverflow" />
                    <TextBox
                        Margin="0,5,10,5"
                        Text="{Binding Command.AnyType, Mode=TwoWay}"
                        ToolTip="AnyType" />

                    <TextBlock
                        Margin="0,5,10,5"
                        FontWeight="Bold"
                        Text="Date Type"
                        TextWrapping="WrapWithOverflow" />
                    <TextBox
                        Margin="0,5,10,5"
                        Text="{Binding Command.DateType, Mode=TwoWay}"
                        ToolTip="DateType" />

                    <TextBlock
                        Margin="0,5,10,5"
                        FontWeight="Bold"
                        Text="Date Time Type"
                        TextWrapping="WrapWithOverflow" />
                    <TextBox
                        Margin="0,5,10,5"
                        Text="{Binding Command.DateTimeType, Mode=TwoWay}"
                        ToolTip="DateTimeType" />

                    <TextBlock
                        Margin="0,5,10,5"
                        FontWeight="Bold"
                        Text="Time Type"
                        TextWrapping="WrapWithOverflow" />
                    <TextBox
                        Margin="0,5,10,5"
                        Text="{Binding Command.TimeType, Mode=TwoWay}"
                        ToolTip="TimeType" />

                    <TextBlock
                        Margin="0,5,10,5"
                        FontWeight="Bold"
                        Text="Time Span Type"
                        TextWrapping="WrapWithOverflow" />
                    <TextBox
                        Margin="0,5,10,5"
                        Text="{Binding Command.TimeSpanType, Mode=TwoWay}"
                        ToolTip="TimeSpanType" />

                    <TextBlock
                        Margin="0,5,10,5"
                        FontWeight="Bold"
                        Text="Generic Array Type"
                        TextWrapping="WrapWithOverflow" />
                    <TextBox
                        Margin="0,5,10,5"
                        Text="{Binding Command.ArrayType, Mode=TwoWay}"
                        ToolTip="ArrayType" />

                    <TextBlock
                        Margin="0,5,10,5"
                        FontWeight="Bold"
                        Text="Generic Array Instance Type (empty = ArrayType)"
                        TextWrapping="WrapWithOverflow" />
                    <TextBox
                        Margin="0,5,10,5"
                        Text="{Binding Command.ArrayInstanceType, Mode=TwoWay}"
                        ToolTip="ArrayInstanceType" />

                    <TextBlock
                        Margin="0,5,10,5"
                        FontWeight="Bold"
                        Text="Generic Dictionary Type"
                        TextWrapping="WrapWithOverflow" />
                    <TextBox
                        Margin="0,5,10,5"
                        Text="{Binding Command.DictionaryType, Mode=TwoWay}"
                        ToolTip="DictionaryType" />

                    <TextBlock
                        Margin="0,5,10,5"
                        FontWeight="Bold"
                        Text="Generic Dictionary Instance Type (empty = DictionaryType)"
                        TextWrapping="WrapWithOverflow" />
                    <TextBox
                        Margin="0,5,10,5"
                        Text="{Binding Command.DictionaryInstanceType, Mode=TwoWay}"
                        ToolTip="DictionaryInstanceType" />

                    <TextBlock
                        Margin="0,5,10,5"
                        FontWeight="Bold"
                        Text="Generic Array Base Type"
                        TextWrapping="WrapWithOverflow" />
                    <TextBox
                        Margin="0,5,10,5"
                        Text="{Binding Command.ArrayBaseType, Mode=TwoWay}"
                        ToolTip="ArrayBaseType" />

                    <TextBlock
                        Margin="0,5,10,5"
                        FontWeight="Bold"
                        Text="Generic Dictionary Base Type"
                        TextWrapping="WrapWithOverflow" />
                    <TextBox
                        Margin="0,5,10,5"
                        Text="{Binding Command.DictionaryBaseType, Mode=TwoWay}"
                        ToolTip="DictionaryBaseType" />
                </StackPanel>
            </StackPanel>
        </StackPanel>

        <TextBlock Margin="0,10,0,0" TextWrapping="Wrap">
            <Bold>Templating</Bold>
            (<Hyperlink
                Name="TemplatingSettingsHyperlink"
                Command="{StaticResource StackPanelChangeVisibilityCommand}"
                CommandParameter="{Binding ElementName=TemplatingSettingsPanel}">
                <TextBlock
                    Name="TemplatingSettingsHyperlinkText"
                    Text="{Binding ElementName=TemplatingSettingsPanel, Path=Visibility, Converter={StaticResource VisibilityToHyperlinkTextConverter}}"
                    TextWrapping="WrapWithOverflow" />
            </Hyperlink>
            )</TextBlock>
        <StackPanel
            x:Name="TemplatingSettingsPanel"
            Margin="20,0,0,0"
            Visibility="Collapsed">
            <TextBlock
                Margin="0,5,0,0"
                FontWeight="Bold"
                Text="Template directory :"
                TextWrapping="WrapWithOverflow" />
            <TextBox
                Margin="0,5,10,5"
                Text="{Binding Command.TemplateDirectory, Mode=TwoWay}"
                ToolTip="TemplateDirectory" />
        </StackPanel>

        <TextBlock Margin="0,10,0,0" TextWrapping="Wrap">
            <Bold>Output</Bold>
            (<Hyperlink
                Name="OutputHyperlink"
                Command="{StaticResource StackPanelChangeVisibilityCommand}"
                CommandParameter="{Binding ElementName=OutputPanel}">
                <TextBlock
                    Name="OutputHyperlinkText"
                    Text="{Binding ElementName=OutputPanel, Path=Visibility, Converter={StaticResource VisibilityToHyperlinkTextConverter}}"
                    TextWrapping="WrapWithOverflow" />
            </Hyperlink>
            )</TextBlock>
        <StackPanel
            x:Name="OutputPanel"
            Margin="20,0,0,0"
            Visibility="Collapsed">
            <TextBlock
                Margin="0,5,10,5"
                FontWeight="Bold"
                Text="New Line Behavior :"
                TextWrapping="WrapWithOverflow" />
            <ComboBox
                Margin="0,5,10,5"
                ItemsSource="{Binding NewLineBehaviors}"
                SelectedItem="{Binding Command.NewLineBehavior, Mode=TwoWay}"
                ToolTip="NewLineBehavior" />
        </StackPanel>
    </StackPanel>

</UserControl>
