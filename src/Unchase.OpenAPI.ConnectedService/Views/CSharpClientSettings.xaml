<UserControl
    x:Class="Unchase.OpenAPI.ConnectedService.Views.CSharpClientSettings"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:commands="clr-namespace:Unchase.OpenAPI.ConnectedService.Common.Commands"
    xmlns:converters="clr-namespace:Unchase.OpenAPI.ConnectedService.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:viewModels="clr-namespace:Unchase.OpenAPI.ConnectedService.ViewModels"
    d:DesignHeight="420"
    d:DesignWidth="768"
    mc:Ignorable="d">
    <UserControl.Resources>
        <viewModels:CSharpClientSettingsViewModel x:Key="ViewModel" />
        <converters:VisibilityConverter x:Key="VisibilityConverter" />
        <converters:NotConverter x:Key="NotConverter" />
        <converters:StringArrayConverter x:Key="StringArrayConverter" />
        <converters:VisibilityToHyperlinkTextConverter x:Key="VisibilityToHyperlinkTextConverter" />
        <commands:StackPanelChangeVisibilityCommand x:Key="StackPanelChangeVisibilityCommand" />
    </UserControl.Resources>
    <StackPanel>
        <TextBlock
            Margin="0,20,0,0"
            HorizontalAlignment="Stretch"
            TextWrapping="Wrap">
            You can use default settings to generate client code file or click on hyperlinks to choose custom settings :
        </TextBlock>

        <TextBlock
            Margin="0,20,0,0"
            HorizontalAlignment="Stretch"
            TextWrapping="Wrap">
            <Bold>Main Settings</Bold>
            (<Hyperlink
                Name="MainSettingsHyperlink"
                Command="{StaticResource StackPanelChangeVisibilityCommand}"
                CommandParameter="{Binding ElementName=MainSettingsPanel}">
                <TextBlock
                    Name="MainSettingsHyperlinkText"
                    Text="{Binding ElementName=MainSettingsPanel, Path=Visibility, Converter={StaticResource VisibilityToHyperlinkTextConverter}}"
                    TextWrapping="WrapWithOverflow" />
            </Hyperlink>
            )</TextBlock>
        <StackPanel
            x:Name="MainSettingsPanel"
            Margin="20,5,0,0"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Top"
            Visibility="Collapsed">
            <TextBlock
                Margin="0,5,0,0"
                FontWeight="Bold"
                Text="Namespace (empty for auto-generated namespace) :"
                TextWrapping="WrapWithOverflow" />
            <TextBox
                x:Name="Namespace"
                Margin="0,5,10,5"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Center"
                Text="{Binding Command.Namespace, Mode=TwoWay}"
                ToolTip="Namespace" />

            <TextBlock
                Margin="0,5,0,0"
                FontWeight="Bold"
                Text="Additional Namespace Usages (comma separated) :"
                TextWrapping="WrapWithOverflow" />
            <TextBox
                x:Name="AdditionalNamespaceUsages"
                Margin="0,5,10,5"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Center"
                Text="{Binding Command.AdditionalNamespaceUsages, Mode=TwoWay, Converter={StaticResource StringArrayConverter}, ConverterParameter=','}"
                ToolTip="AdditionalNamespaceUsages" />

            <CheckBox
                Margin="0,5,0,0"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Bottom"
                Content="Generate contracts output."
                IsChecked="{Binding Command.GenerateContractsOutput, Mode=TwoWay}"
                ToolTip="GenerateContractsOutput" />
            <StackPanel Margin="20,0,0,0" Visibility="{Binding Command.GenerateContractsOutput, Converter={StaticResource VisibilityConverter}}">
                <TextBlock
                    Margin="0,5,0,0"
                    FontWeight="Bold"
                    Text="Contracts Namespace :"
                    TextWrapping="WrapWithOverflow" />
                <TextBox
                    Margin="0,5,10,5"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Center"
                    Text="{Binding Command.ContractsNamespace, Mode=TwoWay}"
                    ToolTip="ContractsNamespace" />
                <TextBlock
                    Margin="0,5,0,0"
                    FontWeight="Bold"
                    Text="Additional Contract Namespace Usages (comma separated) :"
                    TextWrapping="WrapWithOverflow" />
                <TextBox
                    Margin="0,5,10,5"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Center"
                    Text="{Binding Command.AdditionalContractNamespaceUsages, Mode=TwoWay, Converter={StaticResource StringArrayConverter}, ConverterParameter=','}"
                    ToolTip="AdditionalContractNamespaceUsages" />
            </StackPanel>

            <CheckBox
                Margin="0,5,0,0"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Bottom"
                Content="Generate exception classes (when disabled, exception classes must be imported)."
                IsChecked="{Binding Command.GenerateExceptionClasses, Mode=TwoWay}"
                ToolTip="GenerateExceptionClasses" />
            <StackPanel Margin="20,0,0,0" Visibility="{Binding Command.GenerateExceptionClasses, Converter={StaticResource VisibilityConverter}}">
                <TextBlock
                    Margin="0,5,0,0"
                    FontWeight="Bold"
                    Text="Exception class name (may contain the '{controller}' placeholder) :"
                    TextWrapping="WrapWithOverflow" />
                <TextBox
                    Margin="0,5,10,5"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Center"
                    Text="{Binding Command.ExceptionClass, Mode=TwoWay}"
                    ToolTip="ExceptionClass" />
            </StackPanel>
        </StackPanel>

        <TextBlock Margin="0,10,0,0" TextWrapping="Wrap">
            <Bold>Client</Bold>
            (<Hyperlink
                Name="ClientSettingsHyperlink"
                Command="{StaticResource StackPanelChangeVisibilityCommand}"
                CommandParameter="{Binding ElementName=ClientSettingsPanel}">
                <TextBlock
                    Name="ClientSettingsHyperlinkText"
                    Text="{Binding ElementName=ClientSettingsPanel, Path=Visibility, Converter={StaticResource VisibilityToHyperlinkTextConverter}}"
                    TextWrapping="WrapWithOverflow" />
            </Hyperlink>
            )</TextBlock>
        <StackPanel
            x:Name="ClientSettingsPanel"
            Margin="20,0,0,0"
            Visibility="Collapsed">
            <CheckBox
                Margin="0,5,0,0"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Bottom"
                Content="Generate Client Classes."
                IsChecked="{Binding Command.GenerateClientClasses, Mode=TwoWay}"
                ToolTip="GenerateClientClasses" />
            <StackPanel Margin="20,0,0,0" Visibility="{Binding Command.GenerateClientClasses, Converter={StaticResource VisibilityConverter}}">
                <TextBlock Margin="0,5,0,0" TextWrapping="Wrap">
                    <Run FontWeight="Bold" Text="Operation Generation Mode :" />
                    <LineBreak />
                    The {controller} placeholder of the Class Name is replaced by generated client name (depends on the OperationGenerationMode strategy).</TextBlock>
                <ComboBox
                    Margin="0,5,10,5"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Center"
                    ItemsSource="{Binding OperationGenerationModes}"
                    SelectedItem="{Binding Command.OperationGenerationMode, Mode=TwoWay}"
                    ToolTip="OperationGenerationMode" />

                <TextBlock
                    Margin="0,5,0,0"
                    FontWeight="Bold"
                    Text="Class Name :"
                    TextWrapping="WrapWithOverflow" />
                <TextBox
                    Margin="0,5,10,5"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Center"
                    Text="{Binding Command.ClassName, Mode=TwoWay}"
                    ToolTip="ClassName" />

                <TextBlock
                    Margin="0,5,0,0"
                    FontWeight="Bold"
                    Text="Client class access modifier :"
                    TextWrapping="WrapWithOverflow" />
                <TextBox
                    Margin="0,5,10,5"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Center"
                    Text="{Binding Command.ClientClassAccessModifier, Mode=TwoWay}"
                    ToolTip="ClientClassAccessModifier" />

                <TextBlock
                    Margin="0,5,0,0"
                    FontWeight="Bold"
                    Text="Methods with a protected access modifier to use in partial methods ('classname.methodname', comma separated) :"
                    TextWrapping="WrapWithOverflow" />
                <TextBox
                    Margin="0,5,10,5"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Center"
                    Text="{Binding Command.ProtectedMethods, Mode=TwoWay, Converter={StaticResource StringArrayConverter}, ConverterParameter=','}"
                    ToolTip="ProtectedMethods" />

                <CheckBox
                    Margin="0,5,10,5"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Bottom"
                    Content="Use the base URL for the request."
                    IsChecked="{Binding Command.UseBaseUrl, Mode=TwoWay}"
                    ToolTip="UseBaseUrl" />
                <CheckBox
                    Margin="0,5,10,5"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Bottom"
                    Content="Generate the BaseUrl property (must be defined on the base class otherwise)."
                    IsChecked="{Binding Command.GenerateBaseUrlProperty, Mode=TwoWay}"
                    ToolTip="GenerateBaseUrlProperty"
                    Visibility="{Binding Command.UseBaseUrl, Converter={StaticResource VisibilityConverter}}" />

                <CheckBox
                    Margin="0,5,10,5"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Bottom"
                    IsChecked="{Binding Command.GenerateOptionalParameters, Mode=TwoWay}"
                    ToolTip="GenerateOptionalParameters">
                    <TextBlock Text="Generate optional parameters (reorder parameters (required first, optional at the end) and generate optional parameters)." TextWrapping="Wrap" />
                </CheckBox>

                <TextBlock
                    Margin="0,5,0,0"
                    FontWeight="Bold"
                    Text="Excluded Parameter Names (comma separated) :"
                    TextWrapping="WrapWithOverflow" />
                <TextBox
                    Margin="0,5,10,5"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Center"
                    Text="{Binding Command.ExcludedParameterNames, Mode=TwoWay, Converter={StaticResource StringArrayConverter}, ConverterParameter=','}"
                    ToolTip="ExcludedParameterNames" />

                <CheckBox
                    Margin="0,5,10,5"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Bottom"
                    Content="Generate synchronous methods (not recommended)."
                    IsChecked="{Binding Command.GenerateSyncMethods, Mode=TwoWay}"
                    ToolTip="GenerateSyncMethods" />

                <CheckBox
                    Margin="0,5,10,5"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Bottom"
                    IsChecked="{Binding Command.GeneratePrepareRequestAndProcessResponseAsAsyncMethods, Mode=TwoWay}"
                    ToolTip="GeneratePrepareRequestAndProcessResponseAsAsyncMethods">
                    <TextBlock Text="Generate PrepareRequest and ProcessResponse as asynchronous methods (if selected, methods must be defined in the base class or in the partial class)." TextWrapping="Wrap" />
                </CheckBox>

                <CheckBox
                    Margin="0,5,10,5"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Bottom"
                    Content="Expose the JsonSerializerSettings property."
                    IsChecked="{Binding Command.ExposeJsonSerializerSettings, Mode=TwoWay}"
                    ToolTip="ExposeJsonSerializerSettings" />

                <CheckBox
                    Margin="0,5,10,5"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Bottom"
                    Content="Inject HttpClient via constructor (life cycle is managed by the caller)."
                    IsChecked="{Binding Command.InjectHttpClient, Mode=TwoWay}"
                    ToolTip="InjectHttpClient" />

                <CheckBox
                    Margin="0,5,10,5"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Bottom"
                    Content="Dispose the HttpClient (life cycle must be handled by the base class and CreateHttpClientAsync())."
                    IsChecked="{Binding Command.DisposeHttpClient, Mode=TwoWay}"
                    ToolTip="DisposeHttpClient"
                    Visibility="{Binding Command.InjectHttpClient, Converter={StaticResource NotConverter}}" />

                <CheckBox
                    Margin="0,5,10,5"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Bottom"
                    Content="Generate interfaces for Client classes."
                    IsChecked="{Binding Command.GenerateClientInterfaces, Mode=TwoWay}"
                    ToolTip="GenerateClientInterfaces" />

                <TextBlock
                    Margin="0,5,0,0"
                    FontWeight="Bold"
                    Text="Base interface for Client Interfaces (optional)"
                    TextWrapping="WrapWithOverflow"
                    Visibility="{Binding Command.GenerateClientInterfaces, Converter={StaticResource VisibilityConverter}}" />
                <TextBox
                    Margin="0,5,10,5"
                    Text="{Binding Command.ClientBaseInterface, Mode=TwoWay}"
                    ToolTip="ClientBaseInterface"
                    Visibility="{Binding Command.GenerateClientInterfaces, Converter={StaticResource VisibilityConverter}}" />

                <CheckBox
                    Margin="0,5,10,5"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Bottom"
                    IsChecked="{Binding Command.SerializeTypeInformation, Mode=TwoWay}"
                    ToolTip="SerializeTypeInformation">
                    <TextBlock Text="Serialize the type information in a $type property (not recommended, also sets TypeNameHandling = Auto)." TextWrapping="Wrap" />
                </CheckBox>

                <TextBlock
                    Margin="0,5,0,0"
                    FontWeight="Bold"
                    Text="Http Client Type :"
                    TextWrapping="WrapWithOverflow" />
                <TextBox
                    Margin="0,5,10,5"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Center"
                    Text="{Binding Command.HttpClientType, Mode=TwoWay}"
                    ToolTip="HttpClientType" />

                <TextBlock
                    Margin="0,5,0,0"
                    FontWeight="Bold"
                    Text="DateTime format for method parameters :"
                    TextWrapping="WrapWithOverflow" />
                <TextBox
                    Margin="0,5,10,5"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Center"
                    Text="{Binding Command.ParameterDateTimeFormat, Mode=TwoWay}"
                    ToolTip="ParameterDateTimeFormat" />

                <TextBlock
                    Margin="0,5,0,0"
                    FontWeight="Bold"
                    Text="Date format for method parameters :"
                    TextWrapping="WrapWithOverflow" />
                <TextBox
                    Margin="0,5,10,5"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Center"
                    Text="{Binding Command.ParameterDateFormat, Mode=TwoWay}"
                    ToolTip="ParameterDateFormat" />

                <TextBlock
                    Margin="0,5,0,0"
                    FontWeight="Bold"
                    Text="Null value used for query parameters which are null :"
                    TextWrapping="WrapWithOverflow" />
                <TextBox
                    Margin="0,5,10,5"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Center"
                    Text="{Binding Command.QueryNullValue, Mode=TwoWay}"
                    ToolTip="QueryNullValue" />

                <TextBlock Margin="0,5,10,5" TextWrapping="Wrap">
                    Base Class and Configuration Class (<Hyperlink
                        Name="BaseClassAndConfigurationClassHyperlink"
                        Command="{StaticResource StackPanelChangeVisibilityCommand}"
                        CommandParameter="{Binding ElementName=BaseClassAndConfigurationClassPanel}">
                        <TextBlock
                            Name="BaseClassAndConfigurationClassHyperlinkText"
                            Text="{Binding ElementName=BaseClassAndConfigurationClassPanel, Path=Visibility, Converter={StaticResource VisibilityToHyperlinkTextConverter}}"
                            TextWrapping="WrapWithOverflow" />
                    </Hyperlink>
                    )</TextBlock>
                <StackPanel x:Name="BaseClassAndConfigurationClassPanel" Margin="20,0,0,0">
                    <TextBlock
                        Margin="0,5,0,0"
                        FontWeight="Bold"
                        Text="Base Class Name (optional) :"
                        TextWrapping="WrapWithOverflow" />
                    <TextBox
                        Margin="0,5,10,5"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Center"
                        Text="{Binding Command.ClientBaseClass, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        ToolTip="ClientBaseClass" />

                    <StackPanel Margin="20,0,0,0" Visibility="{Binding Command.ClientBaseClass, Converter={StaticResource VisibilityConverter}}">
                        <CheckBox
                            Margin="0,5,10,5"
                            IsChecked="{Binding Command.UseHttpClientCreationMethod, Mode=TwoWay}"
                            ToolTip="UseHttpClientCreationMethod">
                            <TextBlock Text="Call the CreateHttpClientAsync method on the client base class to create a new HttpClient instance" TextWrapping="Wrap" />
                        </CheckBox>
                        <CheckBox
                            Margin="0,5,10,5"
                            IsChecked="{Binding Command.UseHttpRequestMessageCreationMethod, Mode=TwoWay}"
                            ToolTip="UseHttpRequestMessageCreationMethod">
                            <TextBlock Text="Call the CreateHttpRequestMessageAsync method on the client base class to create a new HttpRequestMessage instance" TextWrapping="Wrap" />
                        </CheckBox>
                        <CheckBox
                            Margin="0,5,10,5"
                            Content="Generate the UpdateJsonSerializerSettings method (must be implemented in the base class otherwise)."
                            IsChecked="{Binding Command.GenerateUpdateJsonSerializerSettingsMethod, Mode=TwoWay}"
                            ToolTip="GenerateUpdateJsonSerializerSettingsMethod" />
                        <TextBlock
                            Margin="0,5,10,5"
                            FontWeight="Bold"
                            Text="Configuration Class Name (passed to base class ctor, optional)"
                            TextWrapping="WrapWithOverflow" />
                        <TextBox
                            Margin="0,5,10,5"
                            Text="{Binding Command.ConfigurationClass, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            ToolTip="ConfigurationClass" />
                    </StackPanel>
                </StackPanel>

                <TextBlock Margin="0,5,10,5" TextWrapping="Wrap">
                    Response wrapping (<Hyperlink
                        Name="ResponseWrappingHyperlink"
                        Command="{StaticResource StackPanelChangeVisibilityCommand}"
                        CommandParameter="{Binding ElementName=ResponseWrappingPanel}">
                        <TextBlock
                            Name="ResponseWrappingHyperlinkText"
                            Text="{Binding ElementName=ResponseWrappingPanel, Path=Visibility, Converter={StaticResource VisibilityToHyperlinkTextConverter}}"
                            TextWrapping="WrapWithOverflow" />
                    </Hyperlink>
                    )</TextBlock>
                <StackPanel x:Name="ResponseWrappingPanel" Margin="20,0,0,0">
                    <CheckBox
                        Margin="0,5,10,5"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Bottom"
                        Content="Wrap DTO exceptions in a SwaggerException instance."
                        IsChecked="{Binding Command.WrapDtoExceptions, Mode=TwoWay}"
                        ToolTip="WrapDtoExceptions" />

                    <CheckBox
                        Margin="0,5,10,5"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Bottom"
                        Content="Wrap success responses to allow full response access."
                        IsChecked="{Binding Command.WrapResponses, Mode=TwoWay}"
                        ToolTip="WrapResponses" />

                    <StackPanel Margin="20,0,0,0" Visibility="{Binding Command.WrapResponses, Converter={StaticResource VisibilityConverter}}">
                        <TextBlock
                            Margin="0,5,0,0"
                            FontWeight="Bold"
                            Text="Methods where responses are wrapped (empty for all, 'ControllerName.MethodName', comma separated) :"
                            TextWrapping="WrapWithOverflow" />
                        <TextBox
                            Margin="0,5,10,5"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Center"
                            Text="{Binding Command.WrapResponseMethods, Mode=TwoWay, Converter={StaticResource StringArrayConverter}, ConverterParameter=','}"
                            ToolTip="WrapResponseMethods" />

                        <CheckBox
                            Margin="0,5,10,5"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Bottom"
                            Content="Generate response classes (when disabled, response classes must be imported)."
                            IsChecked="{Binding Command.GenerateResponseClasses, Mode=TwoWay}"
                            ToolTip="GenerateResponseClasses" />

                        <StackPanel Visibility="{Binding Command.GenerateResponseClasses, Converter={StaticResource VisibilityConverter}}">
                            <TextBlock
                                Margin="0,5,0,0"
                                FontWeight="Bold"
                                Text="Response class name (may contain the '{controller}' placeholder) :"
                                TextWrapping="WrapWithOverflow" />
                            <TextBox
                                Margin="0,5,10,5"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Center"
                                Text="{Binding Command.ResponseClass, Mode=TwoWay}"
                                ToolTip="ResponseClass" />
                        </StackPanel>
                    </StackPanel>
                </StackPanel>

                <TextBlock Margin="0,5,10,5" TextWrapping="Wrap">
                    Parameter types (<Hyperlink
                        Name="ParameterTypesHyperlink"
                        Command="{StaticResource StackPanelChangeVisibilityCommand}"
                        CommandParameter="{Binding ElementName=ParameterTypesPanel}">
                        <TextBlock
                            Name="ParameterTypesHyperlinkText"
                            Text="{Binding ElementName=ParameterTypesPanel, Path=Visibility, Converter={StaticResource VisibilityToHyperlinkTextConverter}}"
                            TextWrapping="WrapWithOverflow" />
                    </Hyperlink>
                    )</TextBlock>
                <StackPanel x:Name="ParameterTypesPanel" Margin="20,0,0,0">
                    <TextBlock
                        Margin="0,5,0,0"
                        FontWeight="Bold"
                        Text="Generic Array Type :"
                        TextWrapping="WrapWithOverflow" />
                    <TextBox
                        Margin="0,5,10,5"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Center"
                        Text="{Binding Command.ParameterArrayType, Mode=TwoWay}"
                        ToolTip="ParameterArrayType" />

                    <TextBlock
                        Margin="0,5,0,0"
                        FontWeight="Bold"
                        Text="Generic Dictionary Type :"
                        TextWrapping="WrapWithOverflow" />
                    <TextBox
                        Margin="0,5,10,5"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Center"
                        Text="{Binding Command.ParameterDictionaryType, Mode=TwoWay}"
                        ToolTip="ParameterDictionaryType" />
                </StackPanel>

                <TextBlock Margin="0,5,10,5" TextWrapping="Wrap">
                    Response types (<Hyperlink
                        Name="ResponseTypesHyperlink"
                        Command="{StaticResource StackPanelChangeVisibilityCommand}"
                        CommandParameter="{Binding ElementName=ResponseTypesPanel}">
                        <TextBlock
                            Name="ResponseTypesHyperlinkText"
                            Text="{Binding ElementName=ResponseTypesPanel, Path=Visibility, Converter={StaticResource VisibilityToHyperlinkTextConverter}}"
                            TextWrapping="WrapWithOverflow" />
                    </Hyperlink>
                    )</TextBlock>
                <StackPanel x:Name="ResponseTypesPanel" Margin="20,0,0,0">
                    <TextBlock
                        Margin="0,5,0,0"
                        FontWeight="Bold"
                        Text="Generic Array Type :"
                        TextWrapping="WrapWithOverflow" />
                    <TextBox
                        Margin="0,5,10,5"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Center"
                        Text="{Binding Command.ResponseArrayType, Mode=TwoWay}"
                        ToolTip="ResponseArrayType" />

                    <TextBlock
                        Margin="0,5,0,0"
                        FontWeight="Bold"
                        Text="Generic Dictionary Type :"
                        TextWrapping="WrapWithOverflow" />
                    <TextBox
                        Margin="0,5,10,5"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Center"
                        Text="{Binding Command.ResponseDictionaryType, Mode=TwoWay}"
                        ToolTip="ResponseDictionaryType" />
                </StackPanel>
            </StackPanel>
        </StackPanel>

        <TextBlock Margin="0,10,0,0" TextWrapping="Wrap">
            <Bold>DTO classes</Bold>
            (<Hyperlink
                Name="DtoClassesSettingsHyperlink"
                Command="{StaticResource StackPanelChangeVisibilityCommand}"
                CommandParameter="{Binding ElementName=DtoClassesSettingsPanel}">
                <TextBlock
                    Name="DtoClassesSettingsHyperlinkText"
                    Text="{Binding ElementName=DtoClassesSettingsPanel, Path=Visibility, Converter={StaticResource VisibilityToHyperlinkTextConverter}}"
                    TextWrapping="WrapWithOverflow" />
            </Hyperlink>
            )</TextBlock>
        <StackPanel
            x:Name="DtoClassesSettingsPanel"
            Margin="20,0,0,0"
            Visibility="Collapsed">
            <CheckBox Margin="0,5,10,5" IsChecked="{Binding Command.GenerateDtoTypes, Mode=TwoWay}">
                <TextBlock
                    Text="Generate DTO Types (e.g. request and response classes)"
                    TextWrapping="Wrap"
                    ToolTip="GenerateDtoTypes" />
            </CheckBox>
            <StackPanel Margin="20,0,0,0" Visibility="{Binding Command.GenerateDtoTypes, Converter={StaticResource VisibilityConverter}}">
                <CheckBox
                    Margin="0,5,10,5"
                    IsChecked="{Binding Command.GenerateOptionalPropertiesAsNullable, Mode=TwoWay}"
                    ToolTip="GenerateOptionalPropertiesAsNullable">
                    <TextBlock Text="Generate optional schema properties (not required) as nullable properties." TextWrapping="Wrap" />
                </CheckBox>
                <CheckBox
                    Margin="0,5,10,5"
                    IsChecked="{Binding Command.GenerateNullableReferenceTypes, Mode=TwoWay}"
                    ToolTip="GenerateNullableReferenceTypes">
                    <TextBlock Text="Generate Nullable Reference Type (NRT) annotations (C# 8)." TextWrapping="Wrap" />
                </CheckBox>

                <CheckBox
                    x:Name="ExcludeTypeNamesLater"
                    Margin="0,5,10,5"
                    IsChecked="{Binding ExcludeTypeNamesLater, Mode=TwoWay}"
                    ToolTip="ExcludeTypeNamesLater">
                    <TextBlock Text="Exclude type names later (in a separated window)." TextWrapping="Wrap" />
                </CheckBox>
                <StackPanel Visibility="{Binding ElementName=ExcludeTypeNamesLater, Path=IsChecked, Converter={StaticResource NotConverter}}">
                    <TextBlock
                        Margin="0,5,0,0"
                        FontWeight="Bold"
                        Text="Excluded Type Names (comma separated, must be defined in another namespace) :"
                        TextWrapping="WrapWithOverflow" />
                    <TextBox
                        Margin="0,5,10,5"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Center"
                        Text="{Binding Command.ExcludedTypeNames, Mode=TwoWay, Converter={StaticResource StringArrayConverter}, ConverterParameter=','}"
                        ToolTip="ExcludedTypeNames" />
                </StackPanel>

                <TextBlock
                    Margin="0,5,0,0"
                    FontWeight="Bold"
                    Text="DTO class/enum access modifier :"
                    TextWrapping="WrapWithOverflow" />
                <TextBox
                    Margin="0,5,10,5"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Center"
                    Text="{Binding Command.TypeAccessModifier, Mode=TwoWay}"
                    ToolTip="TypeAccessModifier" />

                <CheckBox
                    Margin="0,5,10,5"
                    IsChecked="{Binding Command.GenerateDefaultValues, Mode=TwoWay}"
                    ToolTip="GenerateDefaultValues">
                    <TextBlock Text="Generate default values for properties (if default value is specified)." TextWrapping="Wrap" />
                </CheckBox>
                <CheckBox
                    Margin="0,5,10,5"
                    IsChecked="{Binding Command.GenerateImmutableArrayProperties, Mode=TwoWay}"
                    ToolTip="GenerateImmutableArrayProperties">
                    <TextBlock Text="Remove the setter for non-nullable array properties." TextWrapping="Wrap" />
                </CheckBox>

                <CheckBox
                    Margin="0,5,10,5"
                    IsChecked="{Binding Command.GenerateImmutableDictionaryProperties, Mode=TwoWay}"
                    ToolTip="GenerateImmutableDictionaryProperties">
                    <TextBlock Text="Remove the setter for non-nullable dictionary properties." TextWrapping="Wrap" />
                </CheckBox>

                <CheckBox
                    Margin="0,5,10,5"
                    IsChecked="{Binding Command.GenerateDataAnnotations, Mode=TwoWay}"
                    ToolTip="GenerateDataAnnotations">
                    <TextBlock Text="Generate data annotation attributes." TextWrapping="Wrap" />
                </CheckBox>

                <CheckBox
                    Margin="0,5,10,5"
                    IsChecked="{Binding Command.GenerateJsonMethods, Mode=TwoWay}"
                    ToolTip="GenerateJsonMethods">
                    <TextBlock Text="Generate ToJson() and FromJson() methods." TextWrapping="Wrap" />
                </CheckBox>

                <CheckBox
                    Margin="0,5,10,5"
                    IsChecked="{Binding Command.EnforceFlagEnums, Mode=TwoWay}"
                    ToolTip="EnforceFlagEnums">
                    <TextBlock Text="Always generate enums as bit flags (with [Flags] attribute)." TextWrapping="Wrap" />
                </CheckBox>

                <CheckBox
                    Margin="0,5,10,5"
                    IsChecked="{Binding Command.InlineNamedArrays, Mode=TwoWay}"
                    ToolTip="InlineNamedArrays">
                    <TextBlock Text="Inline named arrays." TextWrapping="Wrap" />
                </CheckBox>

                <CheckBox
                    Margin="0,5,10,5"
                    IsChecked="{Binding Command.InlineNamedDictionaries, Mode=TwoWay}"
                    ToolTip="InlineNamedDictionaries">
                    <TextBlock Text="Inline named dictionaries." TextWrapping="Wrap" />
                </CheckBox>

                <CheckBox
                    Margin="0,5,10,5"
                    IsChecked="{Binding Command.InlineNamedTuples, Mode=TwoWay}"
                    ToolTip="InlineNamedTuples">
                    <TextBlock Text="Inline named tuples." TextWrapping="Wrap" />
                </CheckBox>

                <CheckBox
                    Margin="0,5,10,5"
                    IsChecked="{Binding Command.InlineNamedAny, Mode=TwoWay}"
                    ToolTip="InlineNamedAny">
                    <TextBlock Text="Inline named any schemas." TextWrapping="Wrap" />
                </CheckBox>

                <TextBlock
                    Margin="0,5,10,5"
                    FontWeight="Bold"
                    Text="Class Style"
                    TextWrapping="WrapWithOverflow" />
                <ComboBox
                    Margin="0,5,10,5"
                    ItemsSource="{Binding ClassStyles}"
                    SelectedItem="{Binding Command.ClassStyle, Mode=TwoWay}"
                    ToolTip="ClassStyle" />

                <TextBlock Margin="0,5,10,5" TextWrapping="Wrap">
                    Serialization (<Hyperlink
                        Name="SerializationHyperlink"
                        Command="{StaticResource StackPanelChangeVisibilityCommand}"
                        CommandParameter="{Binding ElementName=SerializationPanel}">
                        <TextBlock
                            Name="SerializationHyperlinkText"
                            Text="{Binding ElementName=SerializationPanel, Path=Visibility, Converter={StaticResource VisibilityToHyperlinkTextConverter}}"
                            TextWrapping="WrapWithOverflow" />
                    </Hyperlink>
                    )</TextBlock>
                <StackPanel x:Name="SerializationPanel" Margin="20,0,0,0">
                    <TextBlock
                        Margin="0,5,10,5"
                        FontWeight="Bold"
                        Text="JSON Library ('System.Text.Json' is experimental/incomplete!)"
                        TextWrapping="WrapWithOverflow" />
                    <ComboBox
                        Margin="0,5,10,5"
                        ItemsSource="{Binding JsonLibraries}"
                        SelectedItem="{Binding Command.JsonLibrary, Mode=TwoWay}"
                        ToolTip="JsonLibrary" />

                    <CheckBox
                        Margin="0,5,10,5"
                        IsChecked="{Binding Command.RequiredPropertiesMustBeDefined, Mode=TwoWay}"
                        ToolTip="RequiredPropertiesMustBeDefined">
                        <TextBlock Text="Required properties must be defined in JSON (sets Required.Always when the property is required)." TextWrapping="Wrap" />
                    </CheckBox>

                    <CheckBox
                        Margin="0,5,10,5"
                        Content="Use preserve references handling (All) in the JSON serializer."
                        IsChecked="{Binding Command.HandleReferences, Mode=TwoWay}"
                        ToolTip="HandleReferences" />

                    <TextBlock
                        Margin="0,5,10,5"
                        FontWeight="Bold"
                        Text="Custom Json.NET converter types (optional, multiple on separate lines) :"
                        TextWrapping="WrapWithOverflow" />
                    <TextBox
                        Height="52"
                        Margin="0,5,10,5"
                        AcceptsReturn="True"
                        Text="{Binding Command.JsonConverters, Mode=TwoWay, Converter={StaticResource StringArrayConverter}}"
                        ToolTip="JsonConverters"
                        VerticalScrollBarVisibility="Visible" />

                    <TextBlock
                        Margin="0,5,10,5"
                        FontWeight="Bold"
                        Text="JsonSerializerSettings transformation method name (we recommend GenerateUpdateJsonSerializerSettingsMethod instead) :"
                        TextWrapping="WrapWithOverflow" />
                    <TextBox
                        Margin="0,5,10,5"
                        Text="{Binding Command.JsonSerializerSettingsTransformationMethod, Mode=TwoWay}"
                        ToolTip="JsonSerializerSettingsTransformationMethod" />
                </StackPanel>

                <TextBlock Margin="0,5,10,5" TextWrapping="Wrap">
                    Primitive Types (<Hyperlink
                        Name="PrimitiveTypesHyperlink"
                        Command="{StaticResource StackPanelChangeVisibilityCommand}"
                        CommandParameter="{Binding ElementName=PrimitiveTypesPanel}">
                        <TextBlock
                            Name="PrimitiveTypesHyperlinkText"
                            Text="{Binding ElementName=PrimitiveTypesPanel, Path=Visibility, Converter={StaticResource VisibilityToHyperlinkTextConverter}}"
                            TextWrapping="WrapWithOverflow" />
                    </Hyperlink>
                    )</TextBlock>
                <StackPanel x:Name="PrimitiveTypesPanel" Margin="20,0,0,0">
                    <TextBlock
                        Margin="0,5,10,5"
                        FontWeight="Bold"
                        Text="Any Type"
                        TextWrapping="WrapWithOverflow" />
                    <TextBox
                        Margin="0,5,10,5"
                        Text="{Binding Command.AnyType, Mode=TwoWay}"
                        ToolTip="AnyType" />

                    <TextBlock
                        Margin="0,5,10,5"
                        FontWeight="Bold"
                        Text="Date Type"
                        TextWrapping="WrapWithOverflow" />
                    <TextBox
                        Margin="0,5,10,5"
                        Text="{Binding Command.DateType, Mode=TwoWay}"
                        ToolTip="DateType" />

                    <TextBlock
                        Margin="0,5,10,5"
                        FontWeight="Bold"
                        Text="Date Time Type"
                        TextWrapping="WrapWithOverflow" />
                    <TextBox
                        Margin="0,5,10,5"
                        Text="{Binding Command.DateTimeType, Mode=TwoWay}"
                        ToolTip="DateTimeType" />

                    <TextBlock
                        Margin="0,5,10,5"
                        FontWeight="Bold"
                        Text="Time Type"
                        TextWrapping="WrapWithOverflow" />
                    <TextBox
                        Margin="0,5,10,5"
                        Text="{Binding Command.TimeType, Mode=TwoWay}"
                        ToolTip="TimeType" />

                    <TextBlock
                        Margin="0,5,10,5"
                        FontWeight="Bold"
                        Text="Time Span Type"
                        TextWrapping="WrapWithOverflow" />
                    <TextBox
                        Margin="0,5,10,5"
                        Text="{Binding Command.TimeSpanType, Mode=TwoWay}"
                        ToolTip="TimeSpanType" />

                    <TextBlock
                        Margin="0,5,10,5"
                        FontWeight="Bold"
                        Text="Generic Array Type"
                        TextWrapping="WrapWithOverflow" />
                    <TextBox
                        Margin="0,5,10,5"
                        Text="{Binding Command.ArrayType, Mode=TwoWay}"
                        ToolTip="ArrayType" />

                    <TextBlock
                        Margin="0,5,10,5"
                        FontWeight="Bold"
                        Text="Generic Array Instance Type (empty = ArrayType)"
                        TextWrapping="WrapWithOverflow" />
                    <TextBox
                        Margin="0,5,10,5"
                        Text="{Binding Command.ArrayInstanceType, Mode=TwoWay}"
                        ToolTip="ArrayInstanceType" />

                    <TextBlock
                        Margin="0,5,10,5"
                        FontWeight="Bold"
                        Text="Generic Dictionary Type"
                        TextWrapping="WrapWithOverflow" />
                    <TextBox
                        Margin="0,5,10,5"
                        Text="{Binding Command.DictionaryType, Mode=TwoWay}"
                        ToolTip="DictionaryType" />

                    <TextBlock
                        Margin="0,5,10,5"
                        FontWeight="Bold"
                        Text="Generic Dictionary Instance Type (empty = DictionaryType)"
                        TextWrapping="WrapWithOverflow" />
                    <TextBox
                        Margin="0,5,10,5"
                        Text="{Binding Command.DictionaryInstanceType, Mode=TwoWay}"
                        ToolTip="DictionaryInstanceType" />

                    <TextBlock
                        Margin="0,5,10,5"
                        FontWeight="Bold"
                        Text="Generic Array Base Type"
                        TextWrapping="WrapWithOverflow" />
                    <TextBox
                        Margin="0,5,10,5"
                        Text="{Binding Command.ArrayBaseType, Mode=TwoWay}"
                        ToolTip="ArrayBaseType" />

                    <TextBlock
                        Margin="0,5,10,5"
                        FontWeight="Bold"
                        Text="Generic Dictionary Base Type"
                        TextWrapping="WrapWithOverflow" />
                    <TextBox
                        Margin="0,5,10,5"
                        Text="{Binding Command.DictionaryBaseType, Mode=TwoWay}"
                        ToolTip="DictionaryBaseType" />
                </StackPanel>
            </StackPanel>
        </StackPanel>

        <TextBlock Margin="0,10,0,0" TextWrapping="Wrap">
            <Bold>Swagger Information</Bold>
            (<Hyperlink
                Name="SwaggerInformationHyperlink"
                Command="{StaticResource StackPanelChangeVisibilityCommand}"
                CommandParameter="{Binding ElementName=SwaggerInformationPanel}">
                <TextBlock
                    Name="SwaggerInformationHyperlinkText"
                    Text="{Binding ElementName=SwaggerInformationPanel, Path=Visibility, Converter={StaticResource VisibilityToHyperlinkTextConverter}}"
                    TextWrapping="WrapWithOverflow" />
            </Hyperlink>
            )</TextBlock>
        <StackPanel
            x:Name="SwaggerInformationPanel"
            Margin="20,0,0,0"
            Visibility="Collapsed">
            <TextBlock
                Margin="0,5,10,5"
                FontWeight="Bold"
                Text="Service host (optional, use '.' to remove the hostname)"
                TextWrapping="WrapWithOverflow" />
            <TextBox
                Margin="0,5,10,5"
                Text="{Binding Command.ServiceHost, Mode=TwoWay}"
                ToolTip="ServiceHost" />

            <TextBlock
                Margin="0,5,10,5"
                FontWeight="Bold"
                Text="Service schemes (optional, 'http', 'https', 'ws', 'wss', multiple on separate lines)"
                TextWrapping="WrapWithOverflow" />
            <TextBox
                Height="52"
                Margin="0,5,10,5"
                AcceptsReturn="True"
                Text="{Binding Command.ServiceSchemes, Mode=TwoWay, Converter={StaticResource StringArrayConverter}}"
                ToolTip="ServiceSchemes"
                VerticalScrollBarVisibility="Visible" />
        </StackPanel>

        <TextBlock Margin="0,10,0,0" TextWrapping="Wrap">
            <Bold>Templating</Bold>
            (<Hyperlink
                Name="TemplatingHyperlink"
                Command="{StaticResource StackPanelChangeVisibilityCommand}"
                CommandParameter="{Binding ElementName=TemplatingPanel}">
                <TextBlock
                    Name="TemplatingHyperlinkText"
                    Text="{Binding ElementName=TemplatingPanel, Path=Visibility, Converter={StaticResource VisibilityToHyperlinkTextConverter}}"
                    TextWrapping="WrapWithOverflow" />
            </Hyperlink>
            )</TextBlock>
        <StackPanel
            x:Name="TemplatingPanel"
            Margin="20,0,0,0"
            Visibility="Collapsed">
            <TextBlock
                Margin="0,5,10,5"
                FontWeight="Bold"
                Text="Template directory :"
                TextWrapping="WrapWithOverflow" />
            <TextBox
                Margin="0,5,10,5"
                Text="{Binding Command.TemplateDirectory, Mode=TwoWay}"
                ToolTip="TemplateDirectory" />
        </StackPanel>

        <TextBlock Margin="0,10,0,0" TextWrapping="Wrap">
            <Bold>Output</Bold>
            (<Hyperlink
                Name="OutputHyperlink"
                Command="{StaticResource StackPanelChangeVisibilityCommand}"
                CommandParameter="{Binding ElementName=OutputPanel}">
                <TextBlock
                    Name="OutputHyperlinkText"
                    Text="{Binding ElementName=OutputPanel, Path=Visibility, Converter={StaticResource VisibilityToHyperlinkTextConverter}}"
                    TextWrapping="WrapWithOverflow" />
            </Hyperlink>
            )</TextBlock>
        <StackPanel
            x:Name="OutputPanel"
            Margin="20,0,0,0"
            Visibility="Collapsed">
            <TextBlock
                Margin="0,5,10,5"
                FontWeight="Bold"
                Text="New Line Behavior :"
                TextWrapping="WrapWithOverflow" />
            <ComboBox
                Margin="0,5,10,5"
                ItemsSource="{Binding NewLineBehaviors}"
                SelectedItem="{Binding Command.NewLineBehavior, Mode=TwoWay}"
                ToolTip="NewLineBehavior" />
        </StackPanel>
    </StackPanel>
</UserControl>
